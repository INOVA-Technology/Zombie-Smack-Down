#!/usr/bin/env ruby

$rpath = "#{File.expand_path '~'}/.zsd"

require "optparse"
$options = []

OptionParser.new { |opts|

	opts.on("-i", "--info", "Shows info on current game") {
		$options << "i"
	}

	opts.on("-h", "--help", "Shows help page") {
		$options << "h"
	}

	opts.on("-s", "--scores", "Shows top 5 high scores") {
		$options << "s"
	}

	opts.on("-u", "--update", "Updates zsd") {
		$options << "u"
	}

	opts.on("-t", "--testing", "For dev use only") {
		$rpath = "."
	}

}.parse!

require "readline"
require "yaml"
require "#{$rpath}/require/colors"
require "#{$rpath}/require/other"
require "#{$rpath}/require/player"

$player = Player.new

def main

	unless $options.empty?
		$options.each { |o|
			case o
			when "i"
				$player.info
				exit
			when "h"
				help
				exit
			when "s"
				scores
				exit
			when "u"
				system "~/.zsd/update.sh"
				exit
			end
		}
	end

	%w[ TERM INT HUP ].each { |signal|
		trap(signal) {
			exit_game $player
		}
	}

	start
end

def start

	require "#{$rpath}/require/zombie"
	require "#{$rpath}/require/combo"

	# keep combos in order of xp cost
	# keep lowercase
	combos = { "kick punch" => KickPunch.new,
			   "trip stomp" => TripStomp.new,
			   "punch punch kick" => PunchPunchKick.new,
			   "Knee Punch Face Slap" => KneePunchFaceSlap.new,
			   "heal fury" => HealFury.new($player),
			   "elbow fist knee fist knee body slam" => ElbowFistKneeFistKneeBodySlam.new,
			   "kick kick kick kick kick kick kick kick kick kick kick kick kick kick kick" => KickKickKickKickKickKickKickKickKickKickKickKickKickKickKick.new,
			   "combo of possible death" => ComboOfPossibleDeath.new,
			   "combo of death" => ComboOfDeath.new,
			   "coolest combo ever" => CoolestComboEver.new,
			   "chase punch of fire" => ChasePunchOfFire.new,
			   "addison kick of cold hard music" => AddisonKickOfColdHardMusic.new,
			   "not a combo" => NotACombo.new,
			   "pain with a side of blood" => PainWithASideOfBlood.new,
			   "the combo" => TheCombo.new,
			   "the 2nd combo" => The2ndCombo.new,
			   "ultimate destruction kick punch" => UltimateDestructionKickPunch.new,
			   "the 3rd combo" => The3rdCombo.new,
			   "pretty good combo" => PrettyGoodCombo.new,
			   "chuck norris stomp of mayhem" => ChuckNorrisStompOfMayhem.new
	}

	puts pInfo "Type help for help."

	zombies = [ Zombie,
				BigZombie,
				DaddyZombie,
				GunZombie,
				NinjaZombie,
				IdiotZombie,
				BlindZombie,
				StrongZombie,
				BasicallyDeadZombie,
				SuperZombie,
				BossZombie,
				UltimateZombie ]

	while true

		zombie = zombies[$player.save[:wave] - 1].new

		while zombie.isAlive
			input = prompt(">").split

			case command = input[0]
			when "kick", "punch"
				attack $player, zombie, command
				attack zombie, $player if zombie.isAlive
			when "combo"
				success = combo $player, zombie, prompt("Which combo? "), combos
				attack zombie, $player if zombie.isAlive if success
			when "combolist"
				combolist $player, combos
			when "taunt"
				if $player.save[:tauntsAvailable] > 0
					$player.taunt
				else
					puts pWarn "You have no more taunts."
				end
			when "heal"
				amount = input[1].to_i
				if amount > 0
					$player.heal amount
				else
					puts pWarn "Please specify a number greater than 0. Example: heal 5"
				end
			when "info"
				$player.info
				puts
				zombie.info
			when "scores"
				scores
			when "help"
				puts pWarn "Type commands for a list of commands, and tutorial for more in depth info."
			when "commands"
				puts "Avalible Commands:"
				puts "kick, punch, combo, combolist, taunt, heal, info, scores, help, commands, tutorial, save, quit"
			when "tutorial"
				help
			when "save"
				$player.saveGame
			when "easter"
				if input[1] == "egg"
					unless $player.save[:eggUsed]
						xp = (-50..75).to_a.rand_choice
						$player.giveXP xp
						puts pLevelUp "#{(xp >= 0 ? "+" : "-") + xp.abs.to_s} xp"
						$player.save[:eggUsed] = true
					else
						puts pWarn "You used your easter egg this game you cheater :/"
					end
				end
			when "quit"
				quit $player
			else
				puts pWarn "Unknown Command." unless command.nil?
			end

		end # zombie has died if loop ends

	end # end game loop

end

if __FILE__ == $0
	main
end