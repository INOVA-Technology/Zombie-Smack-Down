#!/usr/bin/env ruby

if ARGV[0] == '-t' # only used for testing local version. eg: ./ZSD -t
  require "./ZSDFiles/game"
elsif ARGV[0] == '-u' # updates to newest verion on github
  system "curl -s https://raw.github.com/INOVA-Technology/Zombie-Smack-Down/master/ZSD > /usr/local/bin/ZSD"
  system "curl -s https://raw.github.com/INOVA-Technology/Zombie-Smack-Down/master/ZSDFiles/game.rb > /usr/local/bin/ZSDFiles/game.rb"
  system "chmod +x /usr/local/bin/ZSD"
  system "chmod +x /usr/local/bin/ZSDFiles/game.rb"
  puts "\e[35mUpdate successful!\e[39m"
  exit
elsif ARGV[0] == '-h' # shows help
  system "echo '\n \e[35mBASICS:\e[39m \n
  Kick: does between 3 and 8 damage\n
  Punch: does between 4 and 7 damage \n
  Info: shows status of zombie, player, and level \n
  Quit: quits the game and give option to save \n \n

  \e[35mCOMBOS:\e[39m \n
  To start using combos, type combo. \n
  Combos are displayed using the combolist command. \n \n

  \e[35mHEALTH:\e[39m \n
  if you want more health, type heal. \n
  healing costs 1 xp per health point. \n \n


  '"
  exit
else
  require "/usr/local/bin/ZSDFiles/game" # load normal game module, also loads the prompt function
end
require "readline"

def start hero
  cmds = ["punch", "kick", "combo", "heal", "combolist", "info", "quit", "taunt"]

  while true
  	case hero.prefs[:kills]
  	when 0, 1, 2
  		e = Stuff::Zombie.new hero
    when 3, 4, 5
      e = Stuff::BigZombie.new hero
    when 6, 7, 8
      e = Stuff::DaddyZombie.new hero
    when 9, 10, 11
      e = Stuff::GunZombie.new hero
    when 12, 13, 14
      e = Stuff::NinjaZombie.new hero 
    when 15, 16, 17
      e = Stuff::IdiotZombie.new hero 
    when 18, 19, 20 
      e = Stuff::BlindZombie.new hero 
    when 21, 22, 23 
      e = Stuff::StrongZombie.new hero
    when 24, 25, 26
      e = Stuff::BasicallyDeadZombie.new hero
    else
      hero.win
      break
    end

    ask = true

  	while e.is_alive
  		puts "Type any of the following: " + cmds.join(", ") if ask
      ask = true

      input = prompt "> " # function is defined in ZSDFiles/game.rb

  		case input
  		when "punch"
        hero.attack e, "punch"
        e.attack
      when "kick"
        hero.attack e, "kick"
        e.attack
      when "info"
      	hero.info
        e.info
      when "quit"
      	hero.quit
      when "combolist"
        hero.comboList
      when "combo"
      	hero.attack e, "combo"
      	e.attack if hero.r != 0 # enemy doesnt attack if player does no damage
      when "heal"
      	hero.heal
      when "taunt"
        hero.taunt
      when "easter egg"
        x = Random::rand(-175..150)
        hero.give_xp x
        puts "\e[33mBraaaiiiiinnnnsss!\e[39m (plus #{x} xp)"
      when ""
        ask = false # dont display the commands
      else
        print "\e[33m"
      	puts "Input invalid"
        print "\e[39m"
      end
    end
			
  end
end

def main
	game = Stuff::Game.new

	start game
end

if __FILE__ == $0 # just checks to make sure the file isnt being loaded through require
	main
end